syntax = "proto3";
// Note: this is a proto3 conversion of TiraClientWebMessages.proto
// -----------------------------------------------------------------------------
// Compilation
// -----------------------------------------------------------------------------

// Install the Google Protobuf protoc compiler:
//   Web: http://code.google.com/p/protobuf/
//   Apt: Search your repository for 'protobuf-compiler'
//
// Compile the schema file to generate source code:
//   C++ : $ protoc --cpp_out=path/to/generated/code  TiraClientWebMessages.proto

// -----------------------------------------------------------------------------
// Options
// -----------------------------------------------------------------------------

package tira;

import "google/protobuf/timestamp.proto";

// Other options
option optimize_for = SPEED;

// -----------------------------------------------------------------------------
// Message definitions
// -----------------------------------------------------------------------------

message User {
  string userName         = 4;
  string userPw           = 5;
  string roles            = 11;
  string email            = 12;
  string gravatarUrl      = 13;
  string virtualMachineId = 14;
}

message VirtualMachine {
  string virtualMachineId       = 1;
  string host                   = 2;
  string vmId                   = 3;
  string vmName                 = 4;
  string adminName              = 5;
  string adminPw                = 6;
  string userName               = 7;
  string userPw                 = 8;
  string ip                     = 9;
  string portSsh                = 10;
  string portRdp                = 11;
  repeated Evaluator evaluators = 12;
}

message VirtualMachineState {
  string guestOs              = 1;
  string memorySize           = 2;
  string numberOfCpus         = 3;
  string state                = 4;
  bool stateRunning           = 5;
  bool stateSandboxed         = 6;
  bool stateSandboxing        = 7;
  bool stateUnsandboxing      = 8;
  string host                 = 9;
  string portSsh              = 10;
  string portRdp              = 11;
  bool portSshOpen            = 12;
  bool portRdpOpen            = 13;
  bool processRunning         = 14;
  string processType          = 15;
  string processRunId         = 16;
  string processState         = 17;
  string processTime          = 18;
  bool vmBooting              = 19;
  bool vmPoweringOff          = 20;
  bool vmShuttingDown         = 21;
  Softwares.Software software = 22;
  Run run                     = 23;
  bool hasLatestOutput        = 24;
  string latestOutput         = 25;
}

message VirtualMachineState2 {
  VirtualMachine taskVm = 1;
  bool portSshOpen      = 2;
  bool portRdpOpen      = 3;
}

message Dataset {
  string datasetId    = 1;
  string displayName  = 2;
  string evaluatorId  = 3;
  bool isConfidential = 4;
  bool isDeprecated   = 5;
  string dataServer   = 6;
}

message Evaluator {
  string evaluatorId      = 1;
  string command          = 2;
  string workingDirectory = 3;
  string measures         = 4;
  repeated string measureKeys      = 5;
  // deprecated: superseded by measureKeys.
  repeated string measureFilter    = 6;
  bool isDeprecated       = 7;
}

message Tasks {
  message Task {
    message TaskStatistics {
      int32 participants        = 1;
      int32 softwares           = 2;
      int32 softwaresRunning    = 4;
      bool showSoftwaresRunning = 3;
      int32 runs                = 5;
    }
    string taskId                         = 1;
    string taskName                       = 2;
    string taskDescription                = 3;
    repeated string trainingDataset       = 4;
    repeated string testDataset           = 5;
    string virtualMachineId               = 7;
    string hostId                         = 9;
    string web                            = 10;
    TaskStatistics taskStatistics         = 11;
    repeated string allowedServers        = 12;
    uint32 maxStdOutCharsOnTestData       = 13;
    uint32 maxStdErrCharsOnTestData       = 14;
    uint32 maxFileListCharsOnTestData     = 15;
    string commandPlaceholder             = 16;
    string commandDescription             = 17;
    string datasetLabel                   = 18;
    uint32 maxStdOutCharsOnTestDataEval   = 19;
    uint32 maxStdErrCharsOnTestDataEval   = 20;
    uint32 maxFileListCharsOnTestDataEval = 21;
  }
  repeated Task tasks   = 3;
}

message Softwares {
  message Software {
    string id               = 1;
    string count            = 2;
    string command          = 3;
    string workingDirectory = 4;
    string dataset          = 5;
    string run              = 6;
    string creationDate     = 7;
    string lastEditDate     = 8;
    bool deleted            = 9;
  }

  repeated Software softwares = 1;
}

message Evaluation {
  message Measure {
    string key   = 1;
    string value = 2;
  }

  repeated Measure measure     = 1;
}

message Run {
  string softwareId   = 1;
  string runId        = 2;
  string inputDataset = 3;
  string inputRun     = 4;
  bool downloadable   = 5;
  bool deleted        = 6;
  string taskId       = 7;
  string accessToken  = 8;
}

message ExtendedRun {
  Run run                     = 1;
  string stdout               = 2;
  string stderr               = 3;
  string fileList             = 4;
  string runtime              = 5;
  string runtimeDetails       = 6;
  string size                 = 7;
  string sizeInBytes          = 8;
  string numLines             = 9;
  string numFiles             = 10;
  string numDirectories       = 11;
  bool softwareDeleted        = 12;
  bool inputRunDeleted        = 13;
  bool evaluationRun          = 14;
  bool isRunning              = 15;
  bool hasReview              = 16;
  RunReview runReview         = 17;
  Evaluation evaluation       = 18;
  User user                   = 19;
  bool hasInputRun            = 20;
  ExtendedRun inputRun        = 21;
  bool isDeprecated           = 22;
  bool inputDatasetDeprecated = 23;
  bool softwareDeprecated     = 24;
}

message RunReview {
  string runId          = 1;
  string reviewerId     = 2;
  string reviewDate     = 3;
  bool noErrors         = 4;
  bool missingOutput    = 5;
  bool extraneousOutput = 6;
  bool invalidOutput    = 7;
  bool hasErrorOutput   = 8;
  bool otherErrors      = 9;
  string comment        = 10;
  bool hasErrors        = 11;
  bool hasWarnings      = 12;
  bool hasNoErrors      = 13;
  bool published        = 14;
  bool blinded          = 15;
}

message TaskUser {
  message Execution {
    repeated Dataset trainingDatasets = 1;
    repeated Dataset testDatasets     = 2;
  }

  Tasks.Task task                                 = 1;
  User user                                       = 2;
  bool hasVm                                      = 3;
  VirtualMachineState vmInfo                      = 4;
  VirtualMachineState2 taskVmInfo                 = 5;
  repeated Softwares.Software softwares           = 6;
  repeated Softwares.Software softwaresNotDeleted = 7;
  bool hasSoftwaresNotDeleted                     = 8;
  Execution execution                             = 9;
  repeated ExtendedRun runs                       = 10;
  repeated ExtendedRun runsNotDeleted             = 11;
  bool hasRunsNotDeleted                          = 12;
  repeated ExtendedRun runsNotDeletedNotTest      = 13;
  repeated ExtendedRun evaluatorRunsNotDeleted    = 14;
  bool hasEvaluatorRunsNotDeleted                 = 15;
  repeated ExtendedRun softwareRunsNotDeleted     = 16;
  bool hasSoftwareRunsNotDeleted                  = 17;
}

message DatasetRuns {
  string dataset                = 1;
  bool datasetDeprecated        = 2;
  repeated ExtendedRun runs     = 3;
}

message TaskDataset {
  message DatasetListItem {
    Dataset dataset = 1;
    int32 runsCount = 2;
    bool active     = 3;
  }

  repeated DatasetListItem datasets = 1;
}

// TODO: Name deprecated.
message TaskReview {
  message SoftwareRunning {
    string type  = 1;
    string runId = 2;
    string time  = 3;
  }

  message TaskUser {
    User user                       = 1;
    bool userSignedIn               = 2;
    int32 softwares                 = 3;
    int32 softwaresDeleted          = 4;
    bool softwareRunning            = 5;
    SoftwareRunning runningSoftware = 6;
    int32 runsTotal                 = 7;
    int32 runsReviewed              = 8;
    int32 runsUnreviewed            = 9;
  }

  repeated TaskUser taskUsers        = 1;
  Tasks.Task task                    = 2;
  bool hasRuns                       = 3;
  repeated DatasetRuns runs          = 4;
  bool hasEvaluatorRuns              = 5;
  repeated DatasetRuns evaluatorRuns = 6;
}

message Error {
  string url                = 1;
  int32 statusCode          = 2;
  bool is401                = 3;
  bool is404                = 4;
  bool isDirect             = 5;
  string errorMessage       = 6;
  string stackTrace         = 7;
  repeated string causes    = 8;
  bool hasCauses            = 9;
}
