syntax = "proto2";
// TiraClientWebMessages.proto -*- Google Protobuf -*-
// Copyright (C) 2013-today picapica.org
// \author  martin.potthast@uni-weimar.de
// \version Tira 0.1

// -----------------------------------------------------------------------------
// Compilation
// -----------------------------------------------------------------------------

// Install the Google Protobuf protoc compiler:
//   Web: http://code.google.com/p/protobuf/
//   Apt: Search your repository for 'protobuf-compiler'
//
// Compile the schema file to generate source code:
//   C++ : $ protoc --cpp_out=path/to/generated/code  TiraClientWebMessages.proto

// -----------------------------------------------------------------------------
// Options
// -----------------------------------------------------------------------------

// Becomes the namespace of the generated C++ code
package tira.generated;

// Other options
option optimize_for = SPEED;

// -----------------------------------------------------------------------------
// Message definitions
// -----------------------------------------------------------------------------

message User {
  required string userName         = 4;
  required string userPw           = 5;
  repeated string roles            = 11;
  optional string email            = 12;
  optional string gravatarUrl      = 13;
  optional string virtualMachineId = 14;
  
  // deprecated: moved to model/virtual-machines
  optional string host             = 1;
  optional string vmId             = 2;
  optional string vmName           = 3;
  optional string adminName        = 6;
  optional string adminPw          = 7;
  optional string ip               = 8;
  optional string portSsh          = 9;
  optional string portRdp          = 10;
}

message Users {
  repeated User users = 1;
}

message VirtualMachine {
  optional string virtualMachineId = 1;
  required string host             = 2;
  required string vmId             = 3;
  required string vmName           = 4;
  required string adminName        = 5;
  required string adminPw          = 6;
  required string userName         = 7;
  required string userPw           = 8;
  required string ip               = 9;
  required string portSsh          = 10;
  required string portRdp          = 11;
  repeated Evaluator evaluators    = 12;
}

message VirtualMachineState {
  required string guestOs              = 1;
  required string memorySize           = 2;
  required string numberOfCpus         = 3;
  required string state                = 4;
  required bool stateRunning           = 5 [default = false];
  required bool stateSandboxed         = 6 [default = false];
  required bool stateSandboxing        = 7 [default = false];
  required bool stateUnsandboxing      = 8 [default = false];
  required string host                 = 9;
  required string portSsh              = 10;
  required string portRdp              = 11;
  required bool portSshOpen            = 12 [default = false];
  required bool portRdpOpen            = 13 [default = false];
  required bool processRunning         = 14 [default = false];
  required string processType          = 15;
  required string processRunId         = 16;
  required string processState         = 17;
  required string processTime          = 18;
  required bool vmBooting              = 19 [default = false];
  required bool vmPoweringOff          = 20 [default = false];
  required bool vmShuttingDown         = 21 [default = false];
  optional Softwares.Software software = 22;
  optional Run run                     = 23;
  required bool hasLatestOutput        = 24 [default = false];
  optional string latestOutput         = 25;
}

message VirtualMachineState2 {
  required VirtualMachine taskVm = 1;
  required bool portSshOpen      = 2 [default = false];
  required bool portRdpOpen      = 3 [default = false];
}

message Hosts {
  message Host {
    required string hostId    = 1;
    required string name      = 2;
    required string years     = 3;
    required string web       = 4;
    repeated Tasks.Task tasks = 5;
  }
  
  repeated Host hosts = 1;
}

message Dataset {
  required string datasetId    = 1;
  required string displayName  = 2;
  required string evaluatorId  = 3;
  required bool isConfidential = 4;
  optional bool isDeprecated   = 5;
  optional string dataServer   = 6;
}

message Evaluator {
  required string evaluatorId      = 1;
  required string command          = 2;
  required string workingDirectory = 3;
  required string measures         = 4;
  repeated string measureKeys      = 5;
  // deprecated: superseded by measureKeys.
  repeated string measureFilter    = 6;
  optional bool isDeprecated       = 7;
}

message Tasks {
  message Task {
    message TaskStatistics {
      optional int32 participants        = 1 [default = 0];
      optional int32 softwares           = 2 [default = 0];
      optional int32 softwaresRunning    = 4 [default = 0];
      optional bool showSoftwaresRunning = 3 [default = false];
      optional int32 runs                = 5 [default = 0];
    }
  
    required string taskId                         = 1;
    required string taskName                       = 2;
    optional string taskDescription                = 3;
    repeated string trainingDataset                = 4;
    repeated string testDataset                    = 5;
    optional string virtualMachineId               = 7;
    optional string hostId                         = 9;
    optional string web                            = 10;
    optional TaskStatistics taskStatistics         = 11;
    repeated string allowedServers                 = 12;
    optional uint32 maxStdOutCharsOnTestData       = 13 [default = 0];
    optional uint32 maxStdErrCharsOnTestData       = 14 [default = 0];
    optional uint32 maxFileListCharsOnTestData     = 15 [default = 0];
    optional string commandPlaceholder             = 16 [default = "mySoftware -c $inputDataset -r $inputRun -o $outputDir"];
    optional string commandDescription             = 17 [default = "Available variables: <code>$inputDataset</code>, <code>$inputRun</code>, <code>$outputDir</code>, <code>$dataServer</code>, and <code>$token</code>."];
    optional string datasetLabel                   = 18 [default = "Input dataset"];
    optional uint32 maxStdOutCharsOnTestDataEval   = 19 [default = 0];
    optional uint32 maxStdErrCharsOnTestDataEval   = 20 [default = 0];
    optional uint32 maxFileListCharsOnTestDataEval = 21 [default = 0];
  }

  repeated Task tasks   = 3;
}

message Softwares {
  message Software {
    required string id               = 1;
    required string count            = 2;
    required string command          = 3;
    required string workingDirectory = 4;
    required string dataset          = 5;
    required string run              = 6;
    required string creationDate     = 7;
    required string lastEditDate     = 8;
    required bool deleted            = 9 [default = false];
  }
  
  repeated Software softwares = 1;
}

message Evaluation {
  message Measure {
    required string key   = 1;
    required string value = 2;
  }
  
  repeated Measure measure     = 1;
}

message Run {
  required string softwareId   = 1;
  required string runId        = 2;
  required string inputDataset = 3;
  optional string inputRun     = 4;
  required bool downloadable   = 5 [default = false];
  required bool deleted        = 6 [default = false];
  optional string taskId       = 7;
  optional string accessToken  = 8;
}

message ExtendedRun {
  required Run run                     = 1;
  optional string stdout               = 2;
  optional string stderr               = 3;
  optional string fileList             = 4;
  optional string runtime              = 5;
  optional string runtimeDetails       = 6;
  optional string size                 = 7;
  optional string sizeInBytes          = 8;
  optional string numLines             = 9;
  optional string numFiles             = 10;
  optional string numDirectories       = 11;
  optional bool softwareDeleted        = 12 [default = false];
  optional bool inputRunDeleted        = 13 [default = false];
  optional bool evaluationRun          = 14 [default = false];
  optional bool isRunning              = 15 [default = false];
  optional bool hasReview              = 16 [default = false];
  optional RunReview runReview         = 17;
  optional Evaluation evaluation       = 18;
  optional User user                   = 19;
  optional bool hasInputRun            = 20;
  optional ExtendedRun inputRun        = 21;
  optional bool isDeprecated           = 22;
  optional bool inputDatasetDeprecated = 23;
  optional bool softwareDeprecated     = 24;
}

message RunReview {
  required string runId          = 1;
  required string reviewerId     = 2;
  required string reviewDate     = 3;
  optional bool noErrors         = 4;
  optional bool missingOutput    = 5;
  optional bool extraneousOutput = 6;
  optional bool invalidOutput    = 7;
  optional bool hasErrorOutput   = 8;
  optional bool otherErrors      = 9;
  optional string comment        = 10;
  required bool hasErrors        = 11;
  required bool hasWarnings      = 12;
  required bool hasNoErrors      = 13;
  optional bool published        = 14 [default = false];
  optional bool blinded          = 15 [default = true];
}

message TaskUser {
  message Execution {
    repeated Dataset trainingDatasets = 1;
    repeated Dataset testDatasets     = 2;
  }
   
  required Tasks.Task task                        = 1;
  required User user                              = 2;
  required bool hasVm                             = 3 [default = false];
  optional VirtualMachineState vmInfo             = 4;
  optional VirtualMachineState2 taskVmInfo        = 5;
  repeated Softwares.Software softwares           = 6;
  repeated Softwares.Software softwaresNotDeleted = 7;
  required bool hasSoftwaresNotDeleted            = 8 [default = false];
  required Execution execution                    = 9;
  repeated ExtendedRun runs                       = 10;
  repeated ExtendedRun runsNotDeleted             = 11;
  required bool hasRunsNotDeleted                 = 12 [default = false];
  repeated ExtendedRun runsNotDeletedNotTest      = 13;
  repeated ExtendedRun evaluatorRunsNotDeleted    = 14;
  required bool hasEvaluatorRunsNotDeleted        = 15 [default = false];
  repeated ExtendedRun softwareRunsNotDeleted     = 16;
  required bool hasSoftwareRunsNotDeleted         = 17 [default = false];
}

message DatasetRuns {
  required string dataset         = 1;
  optional bool datasetDeprecated = 2;
  repeated ExtendedRun runs       = 3;
}

message TaskDataset {
  message DatasetListItem {
    required Dataset dataset = 1;
    required int32 runsCount = 2;
    optional bool active     = 3 [default = false];
  }
  
  repeated DatasetListItem datasets = 1;
}

// TODO: Name deprecated.
message TaskReview {
  message SoftwareRunning {
    optional string type  = 1;
    optional string runId = 2;
    optional string time  = 3;
  }

  message TaskUser {
    required User user                       = 1;
    required bool userSignedIn               = 2;
    required int32 softwares                 = 3;
    required int32 softwaresDeleted          = 4;
    required bool softwareRunning            = 5;
    optional SoftwareRunning runningSoftware = 6;
    required int32 runsTotal                 = 7;
    required int32 runsReviewed              = 8;
    required int32 runsUnreviewed            = 9;
  }
  
  repeated TaskUser taskUsers        = 1;
  required Tasks.Task task           = 2;
  optional bool hasRuns              = 3 [default = false];
  repeated DatasetRuns runs          = 4;
  optional bool hasEvaluatorRuns     = 5 [default = false];
  repeated DatasetRuns evaluatorRuns = 6;
}

message TaskReviewUser {  
  required User user                   = 1;
  required Tasks.Task task             = 2;
  repeated DatasetRuns userDatasetRuns = 3;
}

message TaskReviewUserRun {
  required User user       = 1;
  required Tasks.Task task = 2;
  required ExtendedRun run = 3;
}

message Error {
  optional string url          = 1;
  optional int32 statusCode    = 2;
  optional bool is401          = 3 [default = false];
  optional bool is404          = 4 [default = false];
  optional bool isDirect       = 5 [default = false];
  optional string errorMessage = 6;
  optional string stackTrace   = 7;
  repeated string causes       = 8;
  optional bool hasCauses      = 9 [default = false];
}

