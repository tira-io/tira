FROM nginx:1.18-alpine
# 1. setup user and system software

RUN apk update &&\
    apk add --no-cache gcc linux-headers make musl-dev python3-dev build-base libxml2 libxslt libxml2-dev libxslt-dev pcre-dev &&\
    apk add --no-cache g++ &&\
    apk add --update --no-cache python3 zip py3-virtualenv mariadb-dev npm git openssh-client


# NOTE: We'll install it here, so rebuilding the image when testing application code is faster.
# If we install requirements after copying the code, the install layer has to be redone every time.
RUN python3 -m pip install --no-cache-dir wheel grpcio==1.36.1 protobuf uwsgi Django pyyaml grpcio-tools==1.36.1 requests randomname tqdm mysql mysqlclient python-gitlab GitPython django-webpack-loader==0.6.0 python-slugify markdown

# 2. copy sources to temporary directory, enabling to install additional dependencies
RUN addgroup --gid 1010 tira && \
	adduser --disabled-password --uid 1010 --ingroup tira tira && \
	adduser tira root && \
	mkdir /tira-tmp-debug && \
	mkdir -p /tira/application/src/tira && \
	mkdir -p /etc/nginx/logs && \
	mkdir -p /mnt/ceph/tira && \
	mkdir -p /root/.ir_datasets

COPY application/requirements.txt application/src/tira/frontend /tira-dependencies/
COPY protocol/build/python/* /tira/application/src/tira/proto/
COPY model/src/* /mnt/ceph/tira/model/
COPY application/src/tira_nginx.conf /etc/nginx/nginx.conf
COPY application/config/tira-application-config.docker.yml /tira/application/src/config/settings.yml

RUN chown -R tira:tira /usr/local && \
	chmod 777 /var/run/ && \
	echo "tira ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers &&\
	touch /var/log/tira_debug.txt &&\
	touch /tira/application/src/debug.log &&\
	chown tira:tira /var/log/tira_debug.txt &&\
	chown tira:tira /tira/application/src/debug.log &&\
	chown -R tira:tira /root/.ir_datasets &&\
	chmod 777 /root/.ir_datasets &&\
	chmod 777 /root &&\
	mkdir -p /home/tira/.tira &&\
	mkdir -p /mnt/ceph/tira/log/tira-application &&\
	mkdir /home/tira/.ssh &&\
	mkdir /mnt/ceph/tira/state &&\
	touch /mnt/ceph/tira/state/tira_vm_states.sqlite3 &&\
	chown tira:tira -R /home/tira &&\
	chown tira:tira -R /tira

# 3. install client dependencies
RUN cd /tira-dependencies && \
	npm install && \
	python3 -m pip install --no-cache-dir -r /tira-dependencies/requirements.txt && \
	chown tira:tira -R /tira-dependencies && \
	cd /tira-dependencies && \
	rm -Rf src/ package-lock.json package.json requirements.txt tsconfig.json webpack-stats.json webpack.config.js


